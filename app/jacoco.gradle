apply plugin: "jacoco"

ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "$jacocoVersion"
    reportsDir = file("$buildDir/reports")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: testCoverageExclusions)
    def kotlinDebugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/qaDebug", excludes: testCoverageExclusions)
    def mainSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree], [kotlinDebugTree]))
    executionData.setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
}
