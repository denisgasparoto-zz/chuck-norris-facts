apply(plugin: "jacoco")

ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def excludes = [
            'android/**/*.*',
            '**/R.class',
            '**/R$*.class',
            '**/model/**',
            '**/shared/**',
            '**/*Adapter*.*',
            '**/*ViewHolder*.*',
            '**/*Module*.*',
            '**/*Interactor*.*',
            '**/*Activity*.*',
            '**/*Test*.*',
    ]

    def debugTree = fileTree(
            dir: "$buildDir/intermediates/javac/debug/classes/dev/pimentel/marvelapp/jacocotest",
            excludes: excludes
    )
    def kotlinDebugTree = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )
    def mainSrc = "${project.projectDir}/src/main/java"

    classDirectories.setFrom(files([debugTree], [kotlinDebugTree]))
    executionData.setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
    sourceDirectories.setFrom(files([mainSrc]))
}