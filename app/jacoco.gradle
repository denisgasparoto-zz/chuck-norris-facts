apply(plugin: "jacoco")

jacoco {
    toolVersion = '0.8.5'
    reportsDir = file("$buildDir/reports")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/AndroidManifest*.*',
            'android/**/*.*',
            "build/**",
            "**/src/main/res/**",
            "**/*Generated.java"
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: testCoverageExclusions
    )
    def mainSrc = "${project.projectDir}/src/main/java"

    classDirectories.setFrom(files([debugTree], [kotlinDebugTree]))
    executionData.setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
    sourceDirectories.setFrom(files([mainSrc]))

//    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
//            "jacoco/testDebugUnitTest.exec"
//    ]))
}
