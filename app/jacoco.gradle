apply(plugin: "jacoco")

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    def coverageSourceDirs = [
            "src/main/java"
    ]

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*'
    ]

    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: fileFilter
    )

    classDirectories.setFrom(files([javaClasses]))
    additionalSourceDirs.setFrom(files(coverageSourceDirs))
    sourceDirectories.setFrom(files(coverageSourceDirs))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec"
    ]))

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
