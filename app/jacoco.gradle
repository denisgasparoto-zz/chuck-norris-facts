apply(plugin: "jacoco")

jacoco {
    toolVersion = '0.8.5'
    reportsDir = file("$buildDir/reports")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    group = "reporting"
    description = "Generate unified Jacoco code coverage report"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            'build/**',
            '**/AndroidManifest*.*',
            '**/src/main/res/**',
            '**/*Generated.java',
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            'android/**/*.*'
    ]

    def javaDebugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    classDirectories.setFrom(files([javaDebugTree], [kotlinDebugTree]))
    executionData.setFrom(files("$buildDir/jacoco/testDebugUnitTest.exec"))
    sourceDirectories.setFrom(files([mainSrc]))
}
