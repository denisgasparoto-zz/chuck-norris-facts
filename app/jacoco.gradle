apply(plugin: "jacoco")

jacoco {
    toolVersion = '0.8.5'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    def excludes = [
            'build/**',
            '**/*Application*.*',
            '**/*Generated.java',
            '**/src/main/res/**',
            'src/main/assets/**/*.*',
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            'androidx/**/*.*',
            '**/core/**',
            '**/model**',
            '**/*Activity.*',
            '**/*Adapter.*',
            '**/*Interactor.*',
            '**/*BaseApplication.*'
    ]

    classDirectories.setFrom(fileTree(
            dir: "${project.buildDir}/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "${project.buildDir}/tmp/kotlin-classes/debug",
            excludes: excludes
    ))

    def coverageSourceDirs = ["src/main/java"]
    additionalSourceDirs.setFrom(files(coverageSourceDirs))
    sourceDirectories.setFrom(files(coverageSourceDirs))
    executionData.setFrom(files("${project.buildDir}/jacoco/testDebugUnitTest.exec"))

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
