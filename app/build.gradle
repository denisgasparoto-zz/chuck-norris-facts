plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
    id("kotlin-kapt")
    id("io.gitlab.arturbosch.detekt") version "1.7.4"
    id("org.sonarqube") version "2.8"
    id("jacoco")
}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply(from: "project-config.gradle")
apply(from: "jacoco.gradle")
apply(from: "detekt.gradle")
apply(from: "sonar.gradle")

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.denisgasparoto.chucknorrisfacts"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        def apiUrlResName = "base_url"
        def apiUrl = "https://api.chucknorris.io/jokes/"

        release {
            testCoverageEnabled true
            resValue("string", apiUrlResName, apiUrl)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
            resValue("string", apiUrlResName, apiUrl)
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Androidx
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Material
    implementation 'com.google.android.material:material:1.1.0'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.18'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // RxBinding
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.2.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Koin
    implementation 'org.koin:koin-android:2.0.1'
    implementation 'org.koin:koin-androidx-scope:2.0.1'
    implementation 'org.koin:koin-androidx-viewmodel:2.0.1'

    // Mockk
    testImplementation 'io.mockk:mockk:1.9.3'

    // Junit
    testImplementation 'junit:junit:4.12'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // Espresso
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Kakao
    androidTestImplementation 'com.agoda.kakao:kakao:1.4.0'
}
